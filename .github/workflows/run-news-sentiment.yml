name: run-news-sentiment

on:
  schedule:
    - cron: "*/5 * * * *"
  workflow_dispatch:

jobs:
  run:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    concurrency:
      group: run-news-sentiment-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Gate by Toronto 20:00 or 07:30
        id: gate
        shell: bash
        run: |
          set -euo pipefail
          echo "UTC:      $(date -u '+%Y-%m-%d %H:%M:%S %Z')"
          echo "Toronto:  $(TZ=America/Toronto date '+%Y-%m-%d %H:%M:%S %Z')"
          hr="$(TZ=America/Toronto date +%H)"
          min="$(TZ=America/Toronto date +%M)"
          echo "Local(Toronto) hr=$hr min=$min"
          if { [ "$hr" = "20" ] && [ "$min" -ge 0 ] && [ "$min" -le 4 ]; } || \
             { [ "$hr" = "07" ] && [ "$min" -ge 30 ] && [ "$min" -le 34 ]; }
          then
            echo "run=true"  >> "$GITHUB_OUTPUT"
            echo "It's within the execution window. Proceed."
          else
            echo "run=false" >> "$GITHUB_OUTPUT"
            echo "Outside window; skip."
          fi

      - uses: actions/checkout@v4
        if: steps.gate.outputs.run == 'true'

      - uses: actions/setup-python@v5
        if: steps.gate.outputs.run == 'true'
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: Install deps
        if: steps.gate.outputs.run == 'true'
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Prepare .env
        if: steps.gate.outputs.run == 'true'
        run: |
          echo FMP_API_KEY=${{ secrets.FMP_API_KEY }} >> .env
          echo FRED_API_KEY=${{ secrets.FRED_API_KEY }} >> .env
          echo ALIGN_CALENDAR_UNION_FFILL=1 >> .env

      - name: Health check (optional)
        if: steps.gate.outputs.run == 'true'
        env:
          BASE: ${{ secrets.NEWS_API_BASE }}   # 不要ならこのステップごと削除OK
        run: |
          if [ -n "${BASE:-}" ]; then
            curl -fsS "$BASE/health" || (echo "::error::health failed" && exit 1)
          else
            echo "BASE not set; skipping health."
          fi

      - name: Run pipeline
        if: steps.gate.outputs.run == 'true'
        shell: bash
        run: |
          set -euo pipefail
          echo "Nightly job running..."
          # 例:
          # python -m build.train
          # curl -sS http://localhost:8080/train/trigger
