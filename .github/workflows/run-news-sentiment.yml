name: run-news-sentiment

on:
  schedule:
    - cron: "5 * * * *"   # 毎時:05に起動（DST安全のため毎時起動→後段のゲートで20時だけ実行）
  workflow_dispatch:      # 手動の「Run workflow」ボタン用

jobs:
  run:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    concurrency:
      group: run-news-sentiment-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Gate by Toronto 20:00
        id: gate
        shell: bash
        run: |
          set -euo pipefail
          echo "UTC:      $(date -u '+%Y-%m-%d %H:%M:%S %Z')"
          echo "Toronto:  $(TZ=America/Toronto date '+%Y-%m-%d %H:%M:%S %Z')"
          hr="$(TZ=America/Toronto date +%H)"
          # 週末スキップしたいなら↓の 2行をアンコメント（1=Mon … 7=Sun）
          # dow="$(TZ=America/Toronto date +%u)"
          # if [ "$dow" -ge 6 ]; then echo "Weekend. Skip."; echo "run=false" >> "$GITHUB_OUTPUT"; exit 0; fi
          if [ "$hr" != "20" ]; then
            echo "Not 20:00 in Toronto (hr=$hr). Skip."
            echo "run=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          echo "It's 20:00 in Toronto. Running."
          echo "run=true" >> "$GITHUB_OUTPUT"

      - uses: actions/checkout@v4
        if: steps.gate.outputs.run == 'true'

      - uses: actions/setup-python@v5
        if: steps.gate.outputs.run == 'true'
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: Install deps
        if: steps.gate.outputs.run == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Prepare .env
        if: steps.gate.outputs.run == 'true'
        run: |
          echo FMP_API_KEY=${{ secrets.FMP_API_KEY }} >> .env
          echo FRED_API_KEY=${{ secrets.FRED_API_KEY }} >> .env
          echo ALIGN_CALENDAR_UNION_FFILL=1 >> .env

      - name: Run pipeline
        if: steps.gate.outputs.run == 'true'
        shell: bash
        run: |
          # ここに実処理を置く。例：
          # python -m build.train
          echo "TODO: run your nightly job here"
