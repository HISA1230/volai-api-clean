name: run-news-sentiment

on:
  schedule:
    # 5分おきに起動（後段のゲートで 20:00 / 07:30 だけ実行）
    - cron: "*/5 * * * *"
  # 手動の「Run workflow」ボタン
  workflow_dispatch:

jobs:
  run:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    concurrency:
      group: run-news-sentiment-${{ github.ref }}
      cancel-in-progress: true
    env:
      PYTHONUTF8: "1"

    steps:
      - name: Gate by Toronto 20:00 or 07:30
        id: gate
        shell: bash
        run: |
          set -euo pipefail
          echo "UTC:      $(date -u '+%Y-%m-%d %H:%M:%S %Z')"
          echo "Toronto:  $(TZ=America/Toronto date '+%Y-%m-%d %H:%M:%S %Z')"
          hr="$(TZ=America/Toronto date +%H)"
          min="$(TZ=America/Toronto date +%M)"
          echo "Local(Toronto) hr=$hr min=$min"

          # 実行条件:
          # - 20:00〜20:04 の5分窓
          # - 07:30〜07:34 の5分窓
          if { [ "$hr" = "20" ] && [ "$min" -ge 0 ] && [ "$min" -le 4 ]; } || \
             { [ "$hr" = "07" ] && [ "$min" -ge 30 ] && [ "$min" -le 34 ]; }
          then
            echo "run=true"  >> "$GITHUB_OUTPUT"
          else
            echo "run=false" >> "$GITHUB_OUTPUT"
            echo "Outside window; skip."
          fi

      - name: Checkout
        if: steps.gate.outputs.run == 'true'
        uses: actions/checkout@v4

      - name: Setup Python
        if: steps.gate.outputs.run == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: Install deps
        if: steps.gate.outputs.run == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Prepare .env
        if: steps.gate.outputs.run == 'true'
        run: |
          {
            echo FMP_API_KEY=${{ secrets.FMP_API_KEY }}
            echo FRED_API_KEY=${{ secrets.FRED_API_KEY }}
            echo ALIGN_CALENDAR_UNION_FFILL=1
          } >> .env

      - name: Run pipeline
        if: steps.gate.outputs.run == 'true'
        shell: bash
        run: |
          # あなたの本処理コマンドをここへ（例は学習パイプライン）
          python -m build.train
