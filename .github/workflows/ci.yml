name: CI
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: windows-latest
    env:
      PYTHONUTF8: "1"
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: Install deps (runtime + dev)
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          if (Test-Path requirements.txt) { pip install -r requirements.txt }
          if (Test-Path requirements-dev.txt) {
            pip install -r requirements-dev.txt
          } else {
            pip install pytest httpx
          }

      - name: Prepare .env
        shell: pwsh
        run: |
          "FMP_API_KEY=${{ secrets.FMP_API_KEY }}" | Out-File -FilePath .env -Append -Encoding ascii
          "FRED_API_KEY=${{ secrets.FRED_API_KEY }}" | Out-File -FilePath .env -Append -Encoding ascii
          "ALIGN_CALENDAR_UNION_FFILL=1"          | Out-File -FilePath .env -Append -Encoding ascii

      - name: Debug env
        shell: pwsh
        run: |
          python -V
          echo "---- pytest.ini ----"
          if (Test-Path pytest.ini) { Get-Content pytest.ini | %{ $_ } } else { echo "pytest.ini not found" }
          echo "---- files ----"
          git ls-files
          echo "---- pip list (head) ----"
          pip list | Select-Object -First 100

      - name: Pytest collect-only (what will run?)
        shell: pwsh
        run: |
          python -m pytest --collect-only -q -k "offline or schema"

      - name: Run tests (offline/schema only)
        shell: pwsh
        run: |
          python -m pytest -q -k "offline or schema"
